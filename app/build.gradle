/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */
buildscript {
    dependencies {
        classpath 'org.flywaydb:flyway-database-postgresql:11.13.1'
    }
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // flyway
    id 'org.flywaydb.flyway' version '11.13.0'
    id 'nu.studer.jooq' version '9.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation 'io.dropwizard:dropwizard-testing'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.projectlombok:lombok:1.18.40'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.40'


    // This dependency is used by the application.
    
    implementation libs.guava
    implementation 'io.dropwizard:dropwizard-core:4.0.14'
    implementation 'io.dropwizard:dropwizard-jersey:4.0.14'
    implementation 'io.dropwizard:dropwizard-db:4.0.14'
    implementation 'io.dropwizard:dropwizard-jdbi3:4.0.14'
    implementation platform('ru.vyarus.guicey:guicey-bom:7.2.2')
    implementation 'ru.vyarus.guicey:guicey-validation'
    implementation 'ru.vyarus:dropwizard-guicey'
    implementation 'com.google.inject.extensions:guice-assistedinject'
    implementation 'org.projectlombok:lombok:1.18.40'
    annotationProcessor 'org.projectlombok:lombok:1.18.40'
    implementation 'commons-net:commons-net:3.12.0'
    implementation 'org.flywaydb:flyway-core:11.13.0'
    implementation 'org.postgresql:postgresql:42.7.7'
    implementation 'org.flywaydb:flyway-database-postgresql:11.13.1'
    runtimeOnly 'org.flywaydb:flyway-gradle-plugin:11.13.1'
    implementation 'org.jooq:jooq:3.19.1'
    implementation 'org.jooq:jooq-meta:3.19.1'
    implementation 'org.jooq:jooq-codegen:3.19.1'
    jooqGenerator 'org.jooq:jooq-meta-extensions:3.19.1'
    jooqGenerator 'org.jooq:jooq-jackson-extensions:3.19.1'
    jooqGenerator 'org.postgresql:postgresql:42.7.7'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'io.channel.dropwizard.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

flyway {
    // PostgreSQL 연결 설정
    url = System.getenv('DATABASE_URL') ?: 'jdbc:postgresql://localhost:5432/sample'
    user = System.getenv('DATABASE_USER') ?: 'local_user'
    password = System.getenv('DATABASE_PASSWORD') ?: 'local_pw'
    
    // 마이그레이션 파일 위치
    locations = ['filesystem:src/main/resources/db/migration']
    
    // 스키마 설정 (필요한 경우)
    schemas = ['public']
    
    // Flyway 옵션들
    baselineOnMigrate = true
    validateOnMigrate = true
    cleanDisabled = true  // production에서는 반드시 true로 설정

    // PostgreSQL 특화 설정
    placeholderReplacement = false
}

apply from: 'jooq.gradle'

// Configure generated source directory
sourceSets {
    main {
        java {
            srcDirs += 'src/generated/java'  // Include generated jOOQ sources (relative to app module)
        }
    }
}

generateJooq.dependsOn flywayMigrate
compileJava.dependsOn generateJooq
